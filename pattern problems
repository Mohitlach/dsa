				patterns
1.solid rectangle
*****
*****
*****
*****
2. hollow rectangle i=1,j=1,i=r,j=c
*****
*   *
*   *
*****
 	for (int i=1;i<=r;i++)
        {
            for (int j=1;j<=c;j++)
            {
                if(i==1||j==1||i==r||j==c)
                    System.out.print("*");
                else
                    System.out.print(" ");
            }
            System.out.println();
        }
3. half pyramid
*
**
***
****
	for (int i=1;i<=r;i++)
        {
            for (int j=1;j<=i;j++)
            {
                    System.out.print("*");
            }
            System.out.println();
        }
4. inverted half pyramid
****
***
**
*
for(i=r;i>=1;i--)
{
	for(j=1;j<=i;j++)
	{
		System.out.print("*");
	}
	System.out.println();
}
5. inverted half pyramid rotated by 180 deg
   *
  **
 ***
****
for(i=1;i<=r;i++)
{
	for(sp=1;sp<=(r-i);sp++)
	{
		System.out.print(" ");
	}
	for(j=1;j<=i;j++)
	{
		System.out.print("*");
	}
	System.out.println();
}
6. half pyramid no
1
12
1234
12345
for(i=1;i<=r;i++)
{
	k=1;
	for(j=1;j<=i;j++)
	{
		System.out.print(k);
		k++;
	}
	System.out.println();
}
7. inverted half pyramid
12345
1234
123
12
1
for(i=r;i>=1;i--)
{
	k=1;
	for(j=1;j<=i;j++)
	{
		System.out.print(k);
		k++;
	}
	System.out.println();
}
8. floyd's triangle
1
2  3
4  5  6
7  8  9 10
11 12 13 14 15
	k=1;
	for(i=1;i<=r;i++)
        {
            for(j=1;j<=i;j++)
            {
                if(k<=10)
                    System.out.print(k+"  ");
                else
                    System.out.print(k+" ");
                k++;
            }
            System.out.println();
        }
9. 01 triangle
1
01
101
0101
10101
	for(i=1;i<=r;i++)
        {
            for(j=1;j<=i;j++)
            {
                if((i+j)%2==0)
                {
                    System.out.print("1");
                }
                else
                    System.out.print("0");
            }
            System.out.println();
        }
________________________________________________________
		Advance pattern question
1. butterfly pattern
n=4
*      *
**    **
***  ***
********
***  ***
**    **
*      *
//logic spaces=2(n-i)
//first part
     for(i=1;i<=r;i++)
        {
            for(j=1;j<=i;j++)
            {
                System.out.print("*");
            }
            for(sp=1;sp<=2*(r-i);sp++) {
                System.out.print(" ");
            }
            for(j=1;j<=i;j++)
            {
                System.out.print("*");
            }
            System.out.println();
        }
//second part
        for(i=r;i>=1;i--)
        {
            for(j=1;j<=i;j++)
            {
                System.out.print("*");
            }
            for(sp=1;sp<=2*(r-i);sp++) {
                System.out.print(" ");
            }
            for(j=1;j<=i;j++)
            {
                System.out.print("*");
            }
            System.out.println();
        }
2. solid rhombus
    *****
   *****
  *****
 *****
*****
	for(i=1;i<=r;i++)
        {
            for(sp=r-i;sp>=1;sp--)
            {
                System.out.print(" ");
            }
            for(j=1;j<=r;j++)
            {
                System.out.print("*");
            }
            System.out.println();
        }
3. number pyramid
    1
   2 2
  3 3 3
 4 4 4 4
5 5 5 5 5
 	for(i=1;i<=r;i++)
        {
            for(sp=r-i;sp>=1;sp--)
            {
                System.out.print(" ");
            }
            for(j=1;j<=i;j++)
            {
                System.out.print(i+" ");
            }
            System.out.println();
        }
4. palindromic pattern
    1
   212
  32123
 4321234
543212345
	for(i=1;i<=r;i++)
        {
            for(sp=r-i;sp>=1;sp--)
            {
                System.out.print(" ");
            }
            for(j=i;j>1;j--)
            {
                System.out.print(j);
            }
            for(j=1;j<=i;j++)
            {
                System.out.print(j);
            }
            System.out.println();
        }
5. diamond pattern
   *
  ***
 *****
*******
*******
 *****
  ***
   *
       for(i=1;i<=r;i++)
        {
            for(sp=r-i;sp>=1;sp--)
            {
                System.out.print(" ");
            }
            for (j=1;j<=(2*i-1);j++)
            {
                System.out.print("*");
            }
            System.out.println();
        }
        for(i=r;i>=1;i--)
        {
            for(sp=r-i;sp>=1;sp--)
            {
                System.out.print(" ");
            }
            for (j=1;j<=(2*i-1);j++)
            {
                System.out.print("*");
            }
            System.out.println();
        }
6. hollow rhombus
    *****
   *   *
  *   *
 *   *
*****
	for(i=1;i<=r;i++)
        {
            for(sp=r-i;sp>=1;sp--)
            {
                System.out.print(" ");
            }
            for(j=1;j<=r;j++)
            {
                if(i==1||i==r||j==1||j==r)
                    System.out.print("*");
                else
                    System.out.print(" ");
            }
            System.out.println();
        }
7. pascal traingle
    1
   1 1
  1 2 1
 1 3 3 1
1 4 6 4 1
	for(i=0;i<r;i++)
        {
            for(sp=0;sp<r-i;sp++)
            {
                System.out.print(" ");
            }
            for(j=0;j<=i;j++)
            {
                if(j==0||i==0)
                    k=1;
                else
                    k=k*(i-j+1)/j;
                System.out.print(k+" ");
            }
            System.out.println();
        }
	
8. mirror image triangle pattern
1 2 3 4 5 6
 2 3 4 5 6
  3 4 5 6
   4 5 6
    5 6
     6
    5 6
   4 5 6
  3 4 5 6 
 2 3 4 5 6
1 2 3 4 5 6

	for(i=1;i<r;i++)
        {
            for(sp=1;sp<i;sp++)
            {
                System.out.print(" ");
            }
            for(j=i;j<=r;j++)
            {
                System.out.print(j+" ");
            }
            System.out.println();
        }
        for(i=r;i>=1;i--)
        {
            for(sp=1;sp<i;sp++)
            {
                System.out.print(" ");
            }
            for(j=i;j<=r;j++)
            {
                System.out.print(j+" ");
            }
            System.out.println();
        }
